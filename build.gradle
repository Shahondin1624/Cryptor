plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'java-library'
    id 'java-library-distribution'
    id 'maven-publish'
}

group 'com.github.Shahondin1624'
version '1.1'
java.sourceCompatibility = JavaVersion.VERSION_16
java.modularity.inferModulePath = true

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.32'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.3.0-alpha5'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

sourceSets {
    main.java.srcDir 'src/main'
    test.java.srcDir 'src/test'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

java {
    withSourcesJar()
}

application {
    mainClassName("main.Main")
    mainModule.set("main")
}


jar {
    archiveBaseName.set('Cryptor')
    archiveVersion.set('1.1')
    archiveClassifier.set('')
    manifest {
        attributes('Main-Class': 'main.Main')
        attributes 'description' : 'Cryptor JAR'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it: zipTree(it)}
    }
}

distributions {
    main {
        distributionBaseName = 'EnDeCryptor'
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

test {
    useJUnitPlatform()
}

task main(type: JavaExec, dependsOn: classes) {
    group = 'Execution'
    description = 'runs main'
    classpath sourceSets.main.runtimeClasspath
    main = 'main.Main'
    args('password')
}

task packageJavadoc(type: Jar, dependsOn: 'javadoc') {
    from javadoc.destinationDir
    classifier = 'javadoc'
}
task packageSources(type: Jar, dependsOn: 'classes') {
    from sourceSets.main.allSource
    classifier = 'sources'
}
artifacts {
    archives packageJavadoc
    archives packageSources
}